jobs:
- job: ${{parameters.name}}
  pool:
    vmImage: ${{parameters.pool}}
  steps:
  - task: Bash@3
    displayName: 'Run scripts/cibuild.sh'
    inputs:
      targetType: filePath
      filePath: ./scripts/cibuild.sh
      arguments: '--configuration ${{parameters.configuration}} --architecture ${{parameters.architecture}}'
  - task: PublishTestResults@2
    displayName: 'Publish Test Results'
    inputs:
      testResultsFormat: VSTest
      testResultsFiles: artifacts/tst/${{parameters.configuration}}/*.trx
      mergeTestResults: true
      failTaskOnFailedTests: true
      testRunTitle: '${{parameters.name}}'
      buildConfiguration: ${{parameters.configuration}}
      buildPlatform: ${{parameters.architecture}}
  - task: PublishBuildArtifacts@1
    displayName: 'Publish NuGet Packages'
    inputs:
      PathtoPublish: artifacts/pkg/${{parameters.configuration}}
      ArtifactName: packages
      publishLocation: Container
  - task: NuGetCommand@2
    condition: and(succeeded(), eq('${{parameters.publish}}', 'true'))
    inputs:
      command: 'push'
      vstsFeed: '26b2daf5-8f8e-4735-964e-528d3f9a3e70/e7911ed1-5b16-4a11-8e9e-ef17845eb5a8'
      packagesToPush: 'artifacts/pkg/${{parameters.configuration}}/*.nupkg'
      nuGetFeedType: 'internal'
      publishVstsFeed: '26b2daf5-8f8e-4735-964e-528d3f9a3e70/e7911ed1-5b16-4a11-8e9e-ef17845eb5a8'
